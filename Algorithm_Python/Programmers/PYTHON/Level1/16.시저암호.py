
# 프로그래머스 LV.1  시저암호


#문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호를 시저암호!



#1. 공백은 아무리 밀어도 공백
#2. s는 알파벳 소문자, 대문자 , 공백으로 이뤄짐


## 인풋으로 문자열과 정수가 주어짐 
# 주어진 정수만큼 해당 문자열을 오른쪽으로 이동하는 문제!


##chr()이용 > 아스키 코드 값을 입력받아 그 코드에 해당하는 문자를 출력
##ord(c)이용 > 문자의 아스키 코드값을 돌려주는 함수

#1. 인풋으로 주어진 문자열을 리스트로 생성
#2. 리스트를 순회하면서 대소문자를 조건문을 통해 분기 
#3. 리스트의 각 원소를 n만틈 오른쪽으로 이동 


def solution (s,n):
    s=list(s) #문자열 리스트 
    for i in range(len(s)):#문자열 길이만큼 반복
        if s[i].isupper(): #대문자
            s[i] = chr((ord(s[i]) - ord('A')+n) %26 +ord('A'))
        elif s[i].islowwer():
            s[i] = chr((ord(s[i]) - ord('a')+n) %26 +ord('a'))
            
            #ord(s[i]) - ord('a')+n 아스키모드 값을 구하고 a의 아스키 코드를 뺌
            #그리고 이동시킬만큼 n더함
            #알파벳25자리 넉넉히 26나눠 연산자 이용
            
            
    return "".join(s)